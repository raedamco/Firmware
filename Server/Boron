// To run:
// node server.js

const dgram = require('dgram');
const admin = require('firebase-admin');
let serviceAccount = require('./serverKey.json');

const server = dgram.createSocket('udp4');
const listenPort = 7123;

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

let db = admin.firestore();

var occupiedSpots = [];
var capacity;

const debug = true;

server.on('error', (err) => {
	console.log('server error', err.stack);
	server.close();
});

server.on('message', (msg, info) => {
    var Time = new Date();
    log("---------------------------------------------------------------------------------------------------------------------------------------------");
    log("PACKET RECIEVED: LENGTH: [" + msg.length + "] | ADDRESS: [" + info.address + "] | PORT: [" + info.port + "] | TIME: [" + Time + "]");

    var SensorID = msg.readUIntLE(0,1);

    let stringHex = msg.toString('hex');
    log(stringHex);
    //log(stringHex);
    // log(msg.readUInt8(4,8));
    // log("Sensor ID: " + msg.readUInt8(0,1));

    var Distance = ((((msg.readUIntLE(1,2) * 0.000001) * 343)/2) * 39.37);
    Distance = Distance.toFixed(3);
    Distance = parseFloat(Distance,10);
    var OccupiedDistance = 48; //Object is within 4 feet (48in)

    if (Distance <= OccupiedDistance) {
        var Occupied = true;
        var Occupant = "";
    }else{
        var Occupied = false;
        var Occupant = "";
    }

    log("SENSOR ID: [" + SensorID + "] | DISTANCE: [" + Distance + "] | OCCUPIED: [" + Occupied + "]");

	// server.send(msg, 0, msg.length, info.port, info.address);
});

server.on('listening', () => {
	console.log('server listening on port ' + listenPort);
});

server.bind(listenPort);

//Only log when debugging not production
function log(message) {
  if (debug) {
    console.log(message);
  }
}
